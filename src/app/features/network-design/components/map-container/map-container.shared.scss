@use '../../network-design.styles.scss' as global-styles; // Para usar $breakpoint-tablet, etc.

// Estilos compartidos para widgets, paneles, controles y overlays del mapa

.widget-container {
  position: absolute;
  z-index: var(--z-index-widgets-container, 1000);
  top: var(--spacing-sm, 8px);
  right: var(--spacing-sm, 8px);
  width: var(--widget-container-width, 300px);
  max-height: var(--widget-container-max-height, 70vh);
  overflow-y: auto;
  background-color: var(--surface-overlay-light, rgba(255, 255, 255, 0.7));
  padding: var(--spacing-xs, 4px) var(--spacing-sm, 8px);
  border-radius: var(--border-radius-md, 4px);
  font-size: var(--font-size-xs, 12px);
  box-shadow: var(--shadow-sm, 0 1px 3px rgba(0,0,0,0.12));
  
  .performance-metric {
    margin-right: var(--spacing-sm, 8px);
    &:last-child { margin-right: 0; }
  }
}

.map-widgets-container {
  position: absolute;
  z-index: var(--z-index-widgets-container, 1000);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm, 8px);
  > * { pointer-events: auto; }
}

.mini-map-container {
  position: absolute;
  bottom: var(--spacing-lg, 20px);
  left: var(--spacing-lg, 20px);
  z-index: var(--z-index-map-widgets-overlay, 50); // Más bajo, es un widget de fondo
  background-color: var(--surface-overlay-light, rgba(255, 255, 255, 0.8));
  z-index: var(--z-index-loading-overlay, 1050);
  .spinner {
    width: var(--spinner-size-lg, 50px);
    height: var(--spinner-size-lg, 50px);
    border: var(--spinner-border-width, 5px) solid var(--spinner-track-color, rgba(0, 0, 0, 0.1));
    border-radius: 50%;
    border-top-color: var(--primary-color, #3f51b5);
    animation: spin 1s linear infinite;
    margin-bottom: var(--spacing-md, 12px);
  }
  span {
    font-size: var(--font-size-lg, 18px);
    color: var(--text-color, #333);
  }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.map-loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--surface-overlay-light, rgba(255, 255, 255, 0.9));
  z-index: var(--z-index-loading-overlay, 1050);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .loading-spinner { margin-bottom: var(--spacing-md, 16px); }
  .loading-message {
    font-size: var(--font-size-xl, 18px);
    font-weight: 500;
  }
}

// Media queries para adaptabilidad - usando breakpoints estándar de SASS global
@media (max-width: global-styles.$breakpoint-tablet) {
  .widget-container { width: var(--widget-container-width-tablet, 250px); }
}

@media (max-width: global-styles.$breakpoint-mobile) {
  .widget-container {
    width: 100%;
    max-width: none;
    top: auto;
    bottom: 0;
    right: 0;
    max-height: var(--widget-container-max-height-mobile, 40vh);
  }
}

// ELIMINADA LA CLASE GLOBAL .floating-panel Y SUS DERIVADOS DE AQUÍ
// Se debe confiar en los mixins de _floating-panel.scss para los componentes de panel.
/*
.floating-panel { ... todo su contenido ... }
@keyframes fadeInUp { ... }
@media (max-width: global-styles.$breakpoint-tablet) { ... estilos para .floating-panel ... }
@media (max-width: global-styles.$breakpoint-mobile) { ... estilos para .floating-panel ... }
*/ 