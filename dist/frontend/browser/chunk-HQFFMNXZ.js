import{a as i}from"./chunk-4RASZFGW.js";import{d as b}from"./chunk-D4QL4JVC.js";import{$ as R,F as S,M as w,Q as I,fa as d,g as v,id as y,ja as m,m as T,n as A,o as l,oa as g}from"./chunk-FG6FKNI4.js";import{a as x,b as E,d as D,g as N}from"./chunk-OXVY4BEJ.js";var a=function(n){return n.ADMIN="admin",n.OPERATOR="operator",n.TECHNICIAN="technician",n.VIEWER="viewer",n}(a||{});var U=(()=>{class n{mapAuthUserToModelUser(e){return e?{id:e.id,email:e.email,username:e.username||e.email.split("@")[0],firstName:e.firstName,lastName:e.lastName,role:e.role,createdAt:e.createdAt,updatedAt:e.updatedAt,isActive:e.isActive,preferences:{}}:null}mapModelUserToAuthUser(e){return e?{id:e.id,email:e.email,username:e.username,firstName:e.firstName,lastName:e.lastName,role:e.role,createdAt:e.createdAt||new Date,updatedAt:e.updatedAt||new Date,isActive:e.isActive||!1}:null}static{this.\u0275fac=function(t){return new(t||n)}}static{this.\u0275prov=m({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();var O=[{id:1,username:"admin",password:"admin123",firstName:"Admin",lastName:"User",email:"admin@example.com",role:a.ADMIN,createdAt:new Date,updatedAt:new Date,isActive:!0},{id:2,username:"operador",password:"operador123",firstName:"Operador",lastName:"User",email:"operador@example.com",role:a.OPERATOR,createdAt:new Date,updatedAt:new Date,isActive:!0},{id:3,username:"tecnico",password:"tecnico123",firstName:"T\xE9cnico",lastName:"User",email:"tecnico@example.com",role:a.TECHNICIAN,createdAt:new Date,updatedAt:new Date,isActive:!0}],h="token",u="refreshToken",p="user",k="tokenExpiration",J=(()=>{class n{constructor(e,t,r){this.http=e,this.router=t,this.authMapperService=r,this.currentUserSubject=new v(null),this.currentUser$=this.currentUserSubject.asObservable(),this.useMock=i.useMocks,this.isRefreshing=!1,this.authCheckPromise=null,this.apiUrl=`${i.apiUrl}/auth`,this.mockUsers=[{id:"1",username:"admin",firstName:"Admin",lastName:"User",email:"admin@example.com",role:a.ADMIN,createdAt:new Date("2023-01-01"),updatedAt:new Date("2023-01-01"),isActive:!0},{id:"2",username:"user",firstName:"Regular",lastName:"User",email:"user@example.com",role:a.VIEWER,createdAt:new Date("2023-01-02"),updatedAt:new Date("2023-01-02"),isActive:!0},{id:"3",username:"tech",firstName:"Tech",lastName:"User",email:"tech@example.com",role:a.TECHNICIAN,createdAt:new Date("2023-01-03"),updatedAt:new Date("2023-01-03"),isActive:!0}],console.log("AuthService constructor called"),this.initializeAuth()}initializeAuth(){try{let e=this.getToken();if(!e){console.log("No token found in storage");return}let t=this.getCurrentUserFromStorage();if(!t){console.log("No user found in storage"),this.clearAuthData();return}if(!this.tokenExpirationCheck(e)){console.log("Token is invalid or expired"),this.clearAuthData();return}this.currentUserSubject.next(t),this.startRefreshTokenTimer(),console.log("Auth initialized successfully")}catch(e){console.error("Error initializing auth:",e),this.clearAuthData()}}checkAuthStatus(){return console.log("Checking auth status..."),this.authCheckPromise?T(this.authCheckPromise):(this.authCheckPromise=new Promise(e=>N(this,null,function*(){try{let t=this.getToken(),r=localStorage.getItem(u),o=this.getCurrentUserFromStorage();if(!t||!r){console.log("No tokens found"),this.clearAuthData(),e(!1);return}if(!this.isTokenValid(t)){if(console.log("Token is invalid or expired"),r)try{let s=yield this.refreshToken().toPromise();if(s){this.handleAuthResponse(s),e(!0);return}}catch(s){console.error("Error refreshing token:",s),this.clearAuthData()}e(!1);return}o?(console.log("Valid session found"),this.currentUserSubject.next(o),this.startRefreshTokenTimer(),e(!0)):e(!1)}catch(t){console.error("Error checking auth status:",t),this.clearAuthData(),e(!1)}})).finally(()=>{this.authCheckPromise=null}),T(this.authCheckPromise).pipe(R(1)))}login(e,t){if(console.log("Login attempt for:",e),this.useMock){console.log("Using mock authentication");let o=O.find(s=>s.email===e&&s.password===t);if(o){console.log("Mock user found, creating session");let r=o,{password:s}=r,f=D(r,["password"]),c={user:E(x({},f),{id:String(f.id)}),token:"mock-jwt-token-"+Math.random().toString(36).substring(2,15),refreshToken:"mock-refresh-token",expiresIn:3600};return this.handleAuthResponse(c),A(c).pipe(w(500))}return console.log("Mock user not found"),l(()=>new Error("Credenciales inv\xE1lidas"))}return this.http.post(`${i.apiUrl}/auth/login`,{email:e,password:t}).pipe(d(o=>{if(console.log("Login response from backend:",JSON.stringify(o,null,2)),!o.user)throw new Error("Respuesta de login inv\xE1lida: falta usuario");if(!o.token)throw new Error("Respuesta de login inv\xE1lida: falta token");if(!o.expiresIn)throw new Error("Respuesta de login inv\xE1lida: falta expiresIn");console.log("Login successful"),this.handleAuthResponse(o)}),S(o=>(console.error("Login error:",o),l(()=>o))))}logout(){this.clearAuthData(),this.router.navigate(["/auth/login"])}refreshToken(){let e=localStorage.getItem(u);if(!e)return this.clearAuthData(),l(()=>new Error("No hay refresh token disponible"));if(this.isRefreshing)return l(()=>new Error("Ya hay un proceso de refresco en curso"));if(this.isRefreshing=!0,this.useMock){console.log("Using mock refresh token flow");let t={token:"mock-jwt-token-"+Math.random().toString(36).substring(2,15),refreshToken:"mock-refresh-token-"+Math.random().toString(36).substring(2,10),expiresIn:3600};return A(t).pipe(w(300),d(r=>{localStorage.setItem(h,r.token),localStorage.setItem(u,r.refreshToken);let o=new Date;o.setSeconds(o.getSeconds()+r.expiresIn),localStorage.setItem(k,o.toISOString());let s=this.getCurrentUserFromStorage();s&&this.currentUserSubject.next(s),this.startRefreshTokenTimer(),console.log("Mock token refreshed successfully")}),I(()=>{this.isRefreshing=!1}))}return this.http.post(`${this.apiUrl}/refresh`,{refreshToken:e}).pipe(d(t=>{if(localStorage.setItem(h,t.token),localStorage.setItem(u,t.refreshToken),t.expiresIn){let o=new Date;o.setSeconds(o.getSeconds()+t.expiresIn),localStorage.setItem(k,o.toISOString())}let r=this.getCurrentUserFromStorage();r&&this.currentUserSubject.next(r),this.startRefreshTokenTimer()}),S(t=>(this.clearAuthData(),l(()=>t))),I(()=>{this.isRefreshing=!1}))}register(e){return this.http.post(`${i.apiUrl}/auth/register`,e)}requestPasswordReset(e){return this.http.post(`${i.apiUrl}/auth/request-password-reset`,{email:e})}resetPassword(e,t,r){return this.http.post(`${i.apiUrl}/auth/reset-password`,{token:e,newPassword:t,confirmPassword:r})}changePassword(e,t,r){return this.http.post(`${i.apiUrl}/auth/change-password`,{currentPassword:e,newPassword:t,confirmPassword:r})}updateProfile(e){return this.http.put(`${i.apiUrl}/auth/profile`,e).pipe(d(t=>{localStorage.setItem(p,JSON.stringify(t)),this.currentUserSubject.next(t)}))}isAuthenticated(){let e=this.getToken(),t=e?this.isTokenValid(e):!1;return console.log("Authentication check:",t?"authenticated":"not authenticated"),t}getToken(){return localStorage.getItem(h)}getCurrentUser(){return this.currentUserSubject.value}hasRole(e){let t=this.getCurrentUser();return!t||!t.role?!1:t.role===e}hasAnyRole(e){let t=this.getCurrentUser();return!t||!t.role?!1:e.includes(t.role)}handleAuthResponse(e){console.log("Handling auth response");try{if(!("user"in e)){if(localStorage.setItem(h,e.token),localStorage.setItem(u,e.refreshToken),e.expiresIn){let r=new Date;r.setSeconds(r.getSeconds()+e.expiresIn),localStorage.setItem(k,r.toISOString())}let t=this.getCurrentUserFromStorage();t&&this.currentUserSubject.next(t),console.log("Token refreshed successfully");return}if(!e.user||!e.token||!e.refreshToken){console.error("Invalid auth response"),this.clearAuthData();return}localStorage.setItem(h,e.token),localStorage.setItem(u,e.refreshToken),localStorage.setItem(p,JSON.stringify(e.user)),console.log("Auth data stored in localStorage"),this.currentUserSubject.next(e.user),this.startRefreshTokenTimer(),console.log("Session initialized successfully")}catch(t){console.error("Error storing auth data:",t),this.clearAuthData()}}startRefreshTokenTimer(){this.refreshTokenTimeout&&clearTimeout(this.refreshTokenTimeout);let e=this.getToken();if(!e)return;let r=this.getTokenExpiration(e).getTime()-Date.now()-60*1e3;r>0?(console.log("Scheduling token refresh in",r,"ms"),this.refreshTokenTimeout=setTimeout(()=>{console.log("Refreshing token..."),this.refreshToken().subscribe({error:o=>console.error("Error refreshing token:",o)})},r)):(console.log("Token expired, refreshing immediately..."),this.refreshToken().subscribe({error:o=>console.error("Error refreshing token:",o)}))}getTokenExpiration(e){let t=this.decodeToken(e);return!t||!t.exp?new Date:new Date(t.exp*1e3)}decodeToken(e){try{if(!e||typeof e!="string")return console.error("Token inv\xE1lido:",e),null;if(e.startsWith("mock-jwt-token-")){console.log("Token mock detectado, generando payload artificial");let c=new Date,C=new Date(c.getTime()+3600*1e3);return{exp:Math.floor(C.getTime()/1e3),iat:Math.floor(c.getTime()/1e3),sub:"mock-user",isMock:!0}}let t=e.split(".");if(t.length!==3)return console.error("Token mal formado:",e),null;let o=t[1].replace(/-/g,"+").replace(/_/g,"/"),s=decodeURIComponent(atob(o).split("").map(c=>"%"+("00"+c.charCodeAt(0).toString(16)).slice(-2)).join("")),f=JSON.parse(s);return console.log("Token decoded successfully"),f}catch(t){return console.error("Error decoding token:",t),null}}handleError(e){return console.error("Error en autenticaci\xF3n:",e),l(()=>e)}isTokenValid(e){try{let t=this.decodeToken(e);if(!t||!t.exp)return console.log("Token is invalid (no expiration)"),!1;let r=new Date(t.exp*1e3)>new Date;return console.log("Token validity:",r),r}catch(t){return console.error("Error validating token:",t),!1}}getCurrentUserFromStorage(){try{let e=localStorage.getItem(p);if(!e||e==="undefined"||e==="null")return console.log("No valid user found in storage"),null;let t=JSON.parse(e);return!t||typeof t!="object"?(console.log("Invalid user data in storage"),null):(t.username||(t.username=t.email?t.email.split("@")[0]:""),console.log("User retrieved from storage"),t)}catch(e){return console.error("Error getting user from storage:",e),this.clearAuthData(),null}}clearAuthData(){console.log("Clearing auth data"),localStorage.removeItem(h),localStorage.removeItem(u),localStorage.removeItem(p),localStorage.removeItem(k),this.currentUserSubject.next(null),this.refreshTokenTimeout&&clearTimeout(this.refreshTokenTimeout)}tokenExpirationCheck(e){try{let t=this.decodeToken(e);if(!t||!t.exp)return console.log("Token is invalid (no expiration)"),!1;let r=new Date(t.exp*1e3)>new Date;return console.log("Token validity:",r),r}catch(t){return console.error("Error checking token expiration:",t),!1}}createMockUser(e,t=a.VIEWER){return{id:(Math.random()*1e3).toFixed(0),username:e.split("@")[0],firstName:"New",lastName:"User",email:e,role:t,createdAt:new Date,updatedAt:new Date,isActive:!0}}static{this.\u0275fac=function(t){return new(t||n)(g(y),g(b),g(U))}}static{this.\u0275prov=m({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{a,U as b,J as c};
