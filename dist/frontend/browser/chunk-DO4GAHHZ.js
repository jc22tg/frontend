import{a as C}from"./chunk-ULFK375Q.js";import{F as g,M as s,g as p,id as f,ja as d,n as r,oa as m,s as l}from"./chunk-FG6FKNI4.js";import{a as c,b}from"./chunk-OXVY4BEJ.js";var u=class a{set(e,n){try{let t=JSON.stringify(n);localStorage.setItem(e,t)}catch(t){console.error("Error al guardar en localStorage:",t)}}get(e,n=null){try{let t=localStorage.getItem(e);return t===null?n:JSON.parse(t)}catch(t){return console.error("Error al leer de localStorage:",t),n}}remove(e){try{localStorage.removeItem(e)}catch(n){console.error("Error al eliminar de localStorage:",n)}}clear(){try{localStorage.clear()}catch(e){console.error("Error al limpiar localStorage:",e)}}has(e){return localStorage.getItem(e)!==null}keys(){return Object.keys(localStorage)}size(){let e=0;for(let n of this.keys()){let t=localStorage.getItem(n);t&&(e+=n.length+t.length)}return e*2}static \u0275fac=function(n){return new(n||a)};static \u0275prov=d({token:a,factory:a.\u0275fac,providedIn:"root"})};var h=class a{constructor(e,n){this.http=e;this.localStorageService=n;this.loadInitialConnections()}connectionsSubject=new p([]);connections$=this.connectionsSubject.asObservable();selectedConnectionSubject=new p(null);apiUrl=`${C.apiUrl}/connections`;mockDetailedFiberConnections=[{id:"dfc-001",name:"Fibra Detallada OLT-001 a FDP-001",description:"Detalles espec\xEDficos de la fibra entre OLT Principal y FDP Primario.",usageType:"BACKBONE",fiberType:"SINGLE_MODE",connectorType:"SC",polishingType:"APC",standard:"ITU-T G.652",insertionLoss:.5,returnLoss:50,wavelength:1310,bandwidth:1e3,coreDiameter:9,claddingDiameter:125,outerDiameter:3,operatingTemperature:{min:-40,max:85},tensileStrength:100,manufacturer:"Corning",modelNumber:"SMF-28e+",manufacturingDate:new Date("2022-01-15"),certifications:["ISO 9001","RoHS"],strands:{total:12,available:8,inUse:4,reserved:0,damaged:0},strandConfiguration:{totalStrands:12,strandsPerTube:6,tubesPerCable:2,bufferTubes:2,centralStrengthMember:!0},networkInfo:{networkSegment:"Core Ring A",networkLevel:"Backbone",redundancy:!0,backupPath:"dfc-001-backup",maxDistance:2e4,distanceMetrics:{totalLength:150.5,splicePoints:2,maxSpliceLoss:.1,totalLoss:.7}}},{id:"dfc-002",name:"Fibra Detallada FDP-001 a SPL-001",description:"Segmento de fibra desde FDP Primario hasta el primer nivel de splitters.",usageType:"DISTRIBUTION",fiberType:"SINGLE_MODE",connectorType:"LC",polishingType:"UPC",standard:"ITU-T G.657",insertionLoss:.3,returnLoss:45,wavelength:1550,bandwidth:2e3,coreDiameter:9,claddingDiameter:125,outerDiameter:2,operatingTemperature:{min:-20,max:70},tensileStrength:80,manufacturer:"Prysmian",modelNumber:"Draka UC CONQUEROR",manufacturingDate:new Date("2022-05-20"),certifications:["ISO 9001"],strands:{total:24,available:20,inUse:4,reserved:0,damaged:0},strandConfiguration:{totalStrands:24,strandsPerTube:12,tubesPerCable:2,bufferTubes:2,centralStrengthMember:!0},networkInfo:{networkSegment:"Distribution Area 1",networkLevel:"Distribution",redundancy:!1,maxDistance:5e3,distanceMetrics:{totalLength:80,splicePoints:1,maxSpliceLoss:.05,totalLoss:.35}}}];loadInitialConnections(){if(C.featureFlags.enableMockData){console.log("Usando datos mock para conexiones"),setTimeout(()=>{this.connectionsSubject.next(this.getMockConnections())},500);return}console.log("Obteniendo conexiones desde API"),this.http.get(this.apiUrl).pipe(g(e=>(console.error("Error al cargar conexiones desde API:",e),console.log("Usando datos mock por error de conexi\xF3n"),r(this.getMockConnections())))).subscribe({next:e=>{console.log(`Conexiones cargadas: ${e.length}`),this.connectionsSubject.next(e)},error:e=>{console.error("Error en la suscripci\xF3n:",e),this.connectionsSubject.next(this.getMockConnections())}})}getConnections(){return this.connectionsSubject.asObservable()}getSelectedConnection(){return this.selectedConnectionSubject.asObservable()}selectConnection(e){this.selectedConnectionSubject.next(e)}getConnectionById(e){return this.connectionsSubject.pipe(l(n=>n.find(t=>t.id===e)||null))}getConnectionsByElementId(e){return this.connectionsSubject.pipe(l(n=>n.filter(t=>t.sourceElementId===e||t.targetElementId===e)))}addConnection(e){let n=b(c({},e),{id:e.id||`conn-${Date.now()}`,createdAt:new Date,updatedAt:new Date}),t=this.connectionsSubject.value;return this.connectionsSubject.next([...t,n]),r(n)}createConnection(e){return this.addConnection(e)}updateConnection(e){let n=b(c({},e),{updatedAt:new Date}),t=this.connectionsSubject.value,o=t.findIndex(i=>i.id===e.id);if(o!==-1){let i=[...t];i[o]=n,this.connectionsSubject.next(i)}return r(n)}removeConnection(e){let n=this.connectionsSubject.value;if(n.some(o=>o.id===e)){this.connectionsSubject.next(n.filter(i=>i.id!==e));let o=this.selectedConnectionSubject.value;return o&&o.id===e&&this.selectedConnectionSubject.next(null),r(!0)}return r(!1)}filterConnections(e){return this.connectionsSubject.pipe(l(n=>n.filter(t=>{let o=!0;return e.status&&t.status!==e.status&&(o=!1),e.search&&!this.matchesSearch(t,e.search)&&(o=!1),o})))}matchesSearch(e,n){if(!e)return!1;let t=n.toLowerCase(),o=e.sourceElementId?.toLowerCase().includes(t)||!1,i=e.targetElementId?.toLowerCase().includes(t)||!1;return e.id?.toLowerCase().includes(t)||!1||o||i}getDetailedFiberConnectionById(e){let n=this.mockDetailedFiberConnections.find(t=>t.id===e);return n?r(n).pipe(s(300)):r(null).pipe(s(300))}updateDetailedFiberConnection(e){let n=this.mockDetailedFiberConnections.findIndex(t=>t.id===e.id);return n!==-1?(this.mockDetailedFiberConnections[n]=c(c({},this.mockDetailedFiberConnections[n]),e),r(this.mockDetailedFiberConnections[n]).pipe(s(300))):r(null).pipe(s(300))}createDetailedFiberConnection(e){if(this.mockDetailedFiberConnections.find(o=>o.id===e.id))return console.warn(`DetailedFiberConnection con ID ${e.id} ya existe. No se crear\xE1 uno nuevo.`),r(null).pipe(s(100));let t=c({},e);return this.mockDetailedFiberConnections.push(t),console.log("[ConnectionService] Mock DetailedFiberConnection creado:",t),r(t).pipe(s(300))}getMockConnections(){return[{id:"conn-001",name:"Conexi\xF3n OLT-FDP Principal",sourceElementId:"olt-001",targetElementId:"fdp-001",status:"ACTIVE",type:"FIBER",detailedFiberConnectionId:"dfc-001"},{id:"conn-002",name:"Conexi\xF3n FDP-Splitter",sourceElementId:"fdp-001",targetElementId:"splitter-001",status:"ACTIVE",type:"FIBER",detailedFiberConnectionId:"dfc-002"},{id:"conn-003",name:"Conexi\xF3n Splitter-ONT",sourceElementId:"splitter-001",targetElementId:"ont-001",status:"ACTIVE",type:"FIBER",detailedFiberConnectionId:"dfc-003"},{id:"conn-004",name:"Conexi\xF3n L\xF3gica RouterA-RouterB",sourceElementId:"router-A",targetElementId:"router-B",status:"ACTIVE",type:"LOGICAL"}]}validateConnection(e){if(!e)return!1;let n=e.sourceElementId,t=e.targetElementId;return!(!n||!t||n===t)}deleteConnection(e){this.removeConnection(e).subscribe()}exportConnections(){console.log("Exportaci\xF3n de conexiones no implementada")}clearConnections(){this.connectionsSubject.next([]),this.selectedConnectionSubject.next(null)}getConnectionsStats(){return this.connectionsSubject.pipe(l(e=>({total:e.length,active:e.filter(t=>t.status==="ACTIVE").length,inactive:e.filter(t=>t.status==="INACTIVE").length,degraded:e.filter(t=>t.status==="DEGRADED").length,failed:e.filter(t=>t.status==="FAILED").length,planned:e.filter(t=>t.status==="PLANNED").length})))}static \u0275fac=function(n){return new(n||a)(m(f),m(u))};static \u0275prov=d({token:a,factory:a.\u0275fac,providedIn:"root"})};export{u as a,h as b};
